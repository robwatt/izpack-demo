launch4j {
    outfile = 'installer.exe'
    mainClassName = 'com.izforge.izpack.installer.bootstrap.Installer'
    icon = layout.projectDirectory.file('src/main/resources/icon.ico').toString()
    bundledJrePath = './jdk'
    jarTask = project.tasks.izPackCreateInstaller
}

//tasks.register('createInstaller', Launch4jLibraryTask) {
//    dependsOn 'prepareJDK'
//    outfile = 'installer.exe'
//    mainClassName = 'com.izforge.izpack.installer.Installer'
//    icon = layout.projectDirectory.file('src/main/resources/icon.ico').toString()
//    bundledJrePath = './jdk'
//}

//tasks.register('createUninstaller', Launch4jLibraryTask) {
//    dependsOn 'prepareJDK'
//    outfile = 'uninstaller.exe'
//    mainClassName = 'com.izforge.izpack.uninstaller.Uninstaller'
//    icon = layout.projectDirectory.file('src/main/resources/icon.ico').toString()
//    bundledJrePath = './jdk'
//}

// May not be needed unless we want to copy the jdk to the launch4j location to be zipped up at a later date
tasks.register('createInstallerExe') {
    dependsOn createAllExecutables
//    dependsOn copyJDK
}

//tasks.register('copyJDK', Copy) {
//    dependsOn prepareJDK
//    from layout.buildDirectory.dir('jdk')
//    into layout.buildDirectory.dir('launch4j/jdk')
//}